package kr.lul.commons.util;

/**
 * 기본 구현.
 *
 * @author justburrow
 * @since 2018. 9. 22.
 */
public class DefaultHolder<T> implements CheckableHolder<T>, SettableHolder<T> {
    private boolean set;

    private T object;

    public DefaultHolder() {
        this.set = false;
    }

    public DefaultHolder(T object) {
        this.set = true;
        this.object = object;
    }

    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // kr.lul.commons.util.Holder
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    @Override
    public T get() {
        return this.object;
    }

    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // kr.lul.commons.util.CheckableHolder
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    @Override
    public boolean isSet() {
        return this.set;
    }

    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // kr.lul.commons.util.SettableHolder
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    @Override
    public void set(T object) throws IllegalStateException {
        if (this.set) {
            throw new IllegalStateException("already set.");
        }

        this.object = object;
        this.set = true;
    }

    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // java.lang.Object
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    @Override
    public String toString() {
        return new StringBuilder(DefaultHolder.class.getSimpleName())
                .append("{set=").append(this.set)
                .append(", object=").append(this.object)
                .append('}').toString();
    }
}
